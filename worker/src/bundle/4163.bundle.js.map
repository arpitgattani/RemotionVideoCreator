{"version":3,"file":"4163.bundle.js","mappingssources":["./node_modules/.pnpm/@remotion+google-fonts@4.0.289_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@remotion/google-fonts/dist/esm/Questrial.mjs"],"sourcesContent":["// src/base.ts\nimport { continueRender, delayRender } from \"remotion\";\nimport { NoReactInternals } from \"remotion/no-react\";\nvar loadedFonts = {};\nvar loadFontFaceOrTimeoutAfter20Seconds = (fontFace) => {\n  const timeout = Promise.withResolvers();\n  const int = setTimeout(() => {\n    timeout.reject(new Error(\"Timed out loading Google Font\"));\n  }, 18000);\n  return Promise.race([\n    fontFace.load().then(() => {\n      clearTimeout(int);\n    }),\n    timeout.promise\n  ]);\n};\nvar loadFonts = (meta, style, options) => {\n  const weightsAndSubsetsAreSpecified = Array.isArray(options?.weights) && Array.isArray(options?.subsets) && options.weights.length > 0 && options.subsets.length > 0;\n  if (NoReactInternals.ENABLE_V5_BREAKING_CHANGES && !weightsAndSubsetsAreSpecified) {\n    throw new Error(\"Loading Google Fonts without specifying weights and subsets is not supported in Remotion v5. Please specify the weights and subsets you need.\");\n  }\n  const promises = [];\n  const styles = style ? [style] : Object.keys(meta.fonts);\n  let fontsLoaded = 0;\n  for (const style2 of styles) {\n    if (typeof FontFace === \"undefined\") {\n      continue;\n    }\n    if (!meta.fonts[style2]) {\n      throw new Error(`The font ${meta.fontFamily} does not have a style ${style2}`);\n    }\n    const weights = options?.weights ?? Object.keys(meta.fonts[style2]);\n    for (const weight of weights) {\n      if (!meta.fonts[style2][weight]) {\n        throw new Error(`The font ${meta.fontFamily} does not  have a weight ${weight} in style ${style2}`);\n      }\n      const subsets = options?.subsets ?? Object.keys(meta.fonts[style2][weight]);\n      for (const subset of subsets) {\n        let font = meta.fonts[style2]?.[weight]?.[subset];\n        if (!font) {\n          throw new Error(`weight: ${weight} subset: ${subset} is not available for '${meta.fontFamily}'`);\n        }\n        let fontKey = `${meta.fontFamily}-${style2}-${weight}-${subset}`;\n        const previousPromise = loadedFonts[fontKey];\n        if (previousPromise) {\n          promises.push(previousPromise);\n          continue;\n        }\n        const baseLabel = `Fetching ${meta.fontFamily} font ${JSON.stringify({\n          style: style2,\n          weight,\n          subset\n        })}`;\n        const label = weightsAndSubsetsAreSpecified ? baseLabel : `${baseLabel}. This might be caused by loading too many font variations. Read more: https://www.remotion.dev/docs/troubleshooting/font-loading-errors#render-timeout-when-loading-google-fonts`;\n        const handle = delayRender(label, { timeoutInMilliseconds: 60000 });\n        fontsLoaded++;\n        const fontFace = new FontFace(meta.fontFamily, `url(${font}) format('woff2')`, {\n          weight,\n          style: style2,\n          unicodeRange: meta.unicodeRanges[subset]\n        });\n        let attempts = 2;\n        const tryToLoad = () => {\n          if (fontFace.status === \"loaded\") {\n            continueRender(handle);\n            return;\n          }\n          const promise = loadFontFaceOrTimeoutAfter20Seconds(fontFace).then(() => {\n            (options?.document ?? document).fonts.add(fontFace);\n            continueRender(handle);\n          }).catch((err) => {\n            loadedFonts[fontKey] = undefined;\n            if (attempts === 0) {\n              throw err;\n            } else {\n              attempts--;\n              tryToLoad();\n            }\n          });\n          loadedFonts[fontKey] = promise;\n          promises.push(promise);\n        };\n        tryToLoad();\n      }\n    }\n    if (fontsLoaded > 20) {\n      console.warn(`Made ${fontsLoaded} network requests to load fonts for ${meta.fontFamily}. Consider loading fewer weights and subsets by passing options to loadFont(). Disable this warning by passing \"ignoreTooManyRequestsWarning: true\" to \"options\".`);\n    }\n  }\n  return {\n    fontFamily: meta.fontFamily,\n    fonts: meta.fonts,\n    unicodeRanges: meta.unicodeRanges,\n    waitUntilDone: () => Promise.all(promises).then(() => {\n      return;\n    })\n  };\n};\n\n// src/Questrial.ts\nvar getInfo = () => ({\n  fontFamily: \"Questrial\",\n  importName: \"Questrial\",\n  version: \"v18\",\n  url: \"https://fonts.googleapis.com/css2?family=Questrial:ital,wght@0,400\",\n  unicodeRanges: {\n    vietnamese: \"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB\",\n    \"latin-ext\": \"U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF\",\n    latin: \"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD\"\n  },\n  fonts: {\n    normal: {\n      \"400\": {\n        vietnamese: \"https://fonts.gstatic.com/s/questrial/v18/QdVUSTchPBm7nuUeVf70sSFlq20.woff2\",\n        \"latin-ext\": \"https://fonts.gstatic.com/s/questrial/v18/QdVUSTchPBm7nuUeVf70sCFlq20.woff2\",\n        latin: \"https://fonts.gstatic.com/s/questrial/v18/QdVUSTchPBm7nuUeVf70viFl.woff2\"\n      }\n    }\n  },\n  subsets: [\"latin\", \"latin-ext\", \"vietnamese\"]\n});\nvar fontFamily = \"Questrial\";\nvar loadFont = (style, options) => {\n  return loadFonts(getInfo(), style, options);\n};\nexport {\n  loadFont,\n  getInfo,\n  fontFamily\n};\n"],"names":[],"sourceRoot":""}